pipelines:
  default:
    - step:
        name: Prep
        image: node:20
        caches:
          - node
          - node_modules
        script:
          - export CODEARTIFACT_AUTH_TOKEN="CODEARTIFACT_AUTH_TOKEN"
          - yarn
    - parallel:
        - step:
            name: Lint
            image: node:20
            caches:
              - node
            script:
              - export CODEARTIFACT_AUTH_TOKEN="CODEARTIFACT_AUTH_TOKEN"
              - yarn lint
        - step:
            name: Test
            image: node:20
            caches:
              - node
            script:
              - export CODEARTIFACT_AUTH_TOKEN="CODEARTIFACT_AUTH_TOKEN"
              - yarn test
        - step:
            name: Build
            image: node:20
            caches:
              - node
            script:
              - export CODEARTIFACT_AUTH_TOKEN="CODEARTIFACT_AUTH_TOKEN"
              - yarn build
  branches:
    main:
      - step:
          name: Get Token
          trigger: manual
          image: atlassian/pipelines-awscli
          script:
            - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
            - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            - export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION

            - export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain $MC_COMPONENTS_DOMAIN --domain-owner $MC_COMPONENTS_DOMAIN_OWNER --region $AWS_DEFAULT_REGION --query authorizationToken --output text`

            - echo "export CODEARTIFACT_AUTH_TOKEN=$CODEARTIFACT_AUTH_TOKEN" >> token.sh
          artifacts:
            - token.sh
      - step:
          name: Publish
          deployment: Prod
          trigger: manual
          image: node:20
          caches:
            - node
          script:
            - source token.sh
            - yarn publish
