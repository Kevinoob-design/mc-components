name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          node-version: "22.x"

      - name: Build
        run: yarn build

      - uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: |
            dist/
            dist-storybook/
          retention-days: 30

  prettier:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          node-version: "22.x"

      - name: Prettier Format Check
        run: yarn prettier '*.{ts,scss,css,html}' --check

  tf-format:
    runs-on: ubuntu-latest

    steps:
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.10.4"

      - name: Terraform Format Check
        run: terraform fmt -recursive -check

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          node-version: "22.x"

      - name: Lint
        run: yarn eslint . --ext ts

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          node-version: "22.x"

      - name: Unit Tests
        run: yarn test

      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/
          retention-days: 30

  e2e:
    needs: build
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: true
    #   matrix:
    #     shardIndex: [1, 2, 3, 4]
    #     shardTotal: [4]

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          node-version: "22.x"

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright Tests
        # run: yarn test:e2e --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }} --max-failures=1
        run: yarn test:e2e

      - uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  deployment:
    env:
      AWS_REGION: ${{vars.AWS_REGION}}
      CODE_ARTIFACT_DOMAIN: ${{vars.CODE_ARTIFACT_DOMAIN}}
      CODE_ARTIFACT_DOMAIN_OWNER: ${{vars.CODE_ARTIFACT_DOMAIN_OWNER}}

    needs: [build, prettier, tf-format, lint, test, e2e]
    runs-on: ubuntu-latest
    environment: Prod

    if: github.event_name == 'workflow_dispatch'

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          node-version: "22.x"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Publish to S3
        run: aws s3 sync dist-storybook s3://mc-storybook-bucket

      - name: Publish to CodeArtifact
        run: |
          export CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain $CODE_ARTIFACT_DOMAIN --domain-owner $CODE_ARTIFACT_DOMAIN_OWNER --region $AWS_REGION --query authorizationToken --output text)
          yarn npm publish
