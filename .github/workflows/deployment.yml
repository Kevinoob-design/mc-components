name: "Deployment"

on:
  workflow_call: 

jobs:
  check-version:
    environment: Prod
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    outputs:
      isSameVersion: ${{ steps.verify-version.outputs.isSameVersion }}

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          node-version: "22.x"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - id: verify-version
        name: Get package version
        run: | 
          VERSION1=$(yarn node -p "require('./package.json').version")
          VERSION2=$(aws codeartifact list-package-versions --repository ${{vars.CODE_ARTIFACT_REPOSITORY}} --domain ${{vars.CODE_ARTIFACT_DOMAIN}} --format ${{vars.CODE_ARTIFACT_FORMAT}} --package ${{vars.CODE_ARTIFACT_PACKAGE}} --namespace ${{vars.CODE_ARTIFACT_NAMESPACE}} | jq -r '.defaultDisplayVersion')

          echo "Package version: $VERSION1"
          echo "Artifact version: $VERSION2"

          if [[ "$VERSION1" == "$VERSION2" ]]; then
            echo "isSameVersion=true" >> "$GITHUB_OUTPUT"
          else
            echo "isSameVersion=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Check package version
        if: steps.verify-version.outputs.isSameVersion == 'true'
        run: echo "::warning::You must increment the version in package.json for deployment"

  push-to-codeartifact-s3:
    needs: [check-version]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      
    if: ${{ needs.check-version.outputs.isSameVersion == 'false' }}

    environment: Prod

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          node-version: "22.x"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - uses: trstringer/manual-approval@v1.9.1
        with:
          secret: ${{ github.token }}
          approvers: Kevinoob-design
          minimum-approvals: 1
          issue-title: "Deploying to prod"
          issue-body: "Please approve or deny the deployment"
          exclude-workflow-initiator-as-approver: false
          additional-approved-words: ''
          additional-denied-words: ''
          timeout-minutes: 2

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build

      - name: Publish to CodeArtifact
        run: |
          export CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain ${{vars.CODE_ARTIFACT_DOMAIN}} --domain-owner ${{vars.CODE_ARTIFACT_DOMAIN_OWNER}} --region ${{vars.AWS_REGION}} --query authorizationToken --output text)
          yarn npm publish

      - name: Publish to S3
        run: aws s3 sync dist-storybook s3://mc-storybook-bucket